// <auto-generated />
using System;
using HC_5643.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HC_5643.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230807083923_v0.0.1")]
    partial class v001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("FileSystemEntrySequence");

            modelBuilder.Entity("HC_5643.Domain.Objects.FileSystemEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"FileSystemEntrySequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<int>("LibraryId")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentDirectoryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LibraryId");

                    b.HasIndex("ParentDirectoryId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.FileSystemDirectory", b =>
                {
                    b.HasBaseType("HC_5643.Domain.Objects.FileSystemEntry");

                    b.ToTable("Directories");
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.FileSystemFile", b =>
                {
                    b.HasBaseType("HC_5643.Domain.Objects.FileSystemEntry");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.FileSystemEntry", b =>
                {
                    b.HasOne("HC_5643.Domain.Objects.Library", null)
                        .WithMany("Entries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HC_5643.Domain.Objects.FileSystemDirectory", "ParentDirectory")
                        .WithMany()
                        .HasForeignKey("ParentDirectoryId");

                    b.Navigation("ParentDirectory");
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.Library", b =>
                {
                    b.OwnsOne("HC_5643.Domain.Values.PathInfo", "PathInfo", b1 =>
                        {
                            b1.Property<int>("LibraryId")
                                .HasColumnType("integer");

                            b1.Property<string>("DirectoryPath")
                                .HasColumnType("text");

                            b1.Property<string>("Extension")
                                .HasColumnType("text");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("LibraryId");

                            b1.ToTable("Libraries");

                            b1.WithOwner()
                                .HasForeignKey("LibraryId");
                        });

                    b.Navigation("PathInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.FileSystemDirectory", b =>
                {
                    b.OwnsOne("HC_5643.Domain.Values.PathInfo", "PathInfo", b1 =>
                        {
                            b1.Property<int>("FileSystemDirectoryId")
                                .HasColumnType("integer");

                            b1.Property<string>("DirectoryPath")
                                .HasColumnType("text");

                            b1.Property<string>("Extension")
                                .HasColumnType("text");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("FileSystemDirectoryId");

                            b1.ToTable("Directories");

                            b1.WithOwner()
                                .HasForeignKey("FileSystemDirectoryId");
                        });

                    b.Navigation("PathInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.FileSystemFile", b =>
                {
                    b.OwnsOne("HC_5643.Domain.Values.PathInfo", "PathInfo", b1 =>
                        {
                            b1.Property<int>("FileSystemFileId")
                                .HasColumnType("integer");

                            b1.Property<string>("DirectoryPath")
                                .HasColumnType("text");

                            b1.Property<string>("Extension")
                                .HasColumnType("text");

                            b1.Property<string>("FullName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("FileSystemFileId");

                            b1.ToTable("Files");

                            b1.WithOwner()
                                .HasForeignKey("FileSystemFileId");
                        });

                    b.Navigation("PathInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("HC_5643.Domain.Objects.Library", b =>
                {
                    b.Navigation("Entries");
                });
#pragma warning restore 612, 618
        }
    }
}
